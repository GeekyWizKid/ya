
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ASSIGN BEGIN BREAK CLASS COMMA CONTINUE DIVIDE ELSE END EQ EXCEPT FINALLY FOR FUNCTION GE GT IF IMPORT INPUT LBRACE LBRACKET LE LOOP LPAREN LT MINUS MOD NE NEW NOT NUMBER OR PLUS PRINT RBRACE RBRACKET RETURN RPAREN SEMI STRING TIMES TRY VARIABLE WHILEprogram : BEGIN statements ENDstatements : statement\n                 | statements statementstatement : display_statement\n                | assignment_statement\n                | if_statement\n                | loop_statement\n                | while_statement\n                | array_statement\n                | emptydisplay_statement : PRINT LPAREN expression RPARENassignment_statement : VARIABLE ASSIGN expressionif_statement : IF LPAREN condition RPAREN BEGIN statements END\n                   | IF LPAREN condition RPAREN BEGIN statements END ELSE BEGIN statements ENDloop_statement : LOOP BEGIN statements ENDwhile_statement : WHILE LPAREN condition RPAREN BEGIN statements ENDarray_statement : ARRAY VARIABLE ASSIGN LBRACKET array_elements RBRACKETarray_statement : VARIABLE LBRACKET expression RBRACKET ASSIGN expressionarray_elements : expression\n                     | expression COMMA array_elementscondition : expression EQ expression\n                | expression GT expression\n                | expression LT expression\n                | expression GE expression\n                | expression LE expressionexpression : term\n                 | expression PLUS term\n                 | expression MINUS termterm : factor\n           | term TIMES factor\n           | term DIVIDE factorfactor : NUMBER\n             | STRING\n             | VARIABLE\n             | array_access\n             | LPAREN expression RPARENarray_access : VARIABLE LBRACKET expression RBRACKETempty :'
    
_lr_action_items = {'BEGIN':([0,15,50,57,84,],[2,24,66,72,85,]),'$end':([1,18,],[0,-1,]),'PRINT':([2,3,4,5,6,7,8,9,10,11,19,24,29,30,31,32,33,34,35,39,43,56,59,60,61,62,63,66,72,75,76,77,78,79,81,82,85,86,87,],[12,12,-2,-4,-5,-6,-7,-8,-9,-10,-3,12,-26,-29,-32,-33,-34,-35,-12,12,-11,-15,-36,-27,-28,-30,-31,12,12,-37,-18,12,12,-17,-13,-16,12,12,-14,]),'VARIABLE':([2,3,4,5,6,7,8,9,10,11,17,19,20,21,22,23,24,25,27,29,30,31,32,33,34,35,39,43,44,45,46,47,48,51,52,53,54,55,56,58,59,60,61,62,63,65,66,72,75,76,77,78,79,80,81,82,85,86,87,],[13,13,-2,-4,-5,-6,-7,-8,-9,-10,26,-3,33,33,33,33,13,33,33,-26,-29,-32,-33,-34,-35,-12,13,-11,33,33,33,33,33,33,33,33,33,33,-15,33,-36,-27,-28,-30,-31,33,13,13,-37,-18,13,13,-17,33,-13,-16,13,13,-14,]),'IF':([2,3,4,5,6,7,8,9,10,11,19,24,29,30,31,32,33,34,35,39,43,56,59,60,61,62,63,66,72,75,76,77,78,79,81,82,85,86,87,],[14,14,-2,-4,-5,-6,-7,-8,-9,-10,-3,14,-26,-29,-32,-33,-34,-35,-12,14,-11,-15,-36,-27,-28,-30,-31,14,14,-37,-18,14,14,-17,-13,-16,14,14,-14,]),'LOOP':([2,3,4,5,6,7,8,9,10,11,19,24,29,30,31,32,33,34,35,39,43,56,59,60,61,62,63,66,72,75,76,77,78,79,81,82,85,86,87,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,-3,15,-26,-29,-32,-33,-34,-35,-12,15,-11,-15,-36,-27,-28,-30,-31,15,15,-37,-18,15,15,-17,-13,-16,15,15,-14,]),'WHILE':([2,3,4,5,6,7,8,9,10,11,19,24,29,30,31,32,33,34,35,39,43,56,59,60,61,62,63,66,72,75,76,77,78,79,81,82,85,86,87,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-3,16,-26,-29,-32,-33,-34,-35,-12,16,-11,-15,-36,-27,-28,-30,-31,16,16,-37,-18,16,16,-17,-13,-16,16,16,-14,]),'ARRAY':([2,3,4,5,6,7,8,9,10,11,19,24,29,30,31,32,33,34,35,39,43,56,59,60,61,62,63,66,72,75,76,77,78,79,81,82,85,86,87,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-3,17,-26,-29,-32,-33,-34,-35,-12,17,-11,-15,-36,-27,-28,-30,-31,17,17,-37,-18,17,17,-17,-13,-16,17,17,-14,]),'END':([2,3,4,5,6,7,8,9,10,11,19,24,29,30,31,32,33,34,35,39,43,56,59,60,61,62,63,66,72,75,76,77,78,79,81,82,85,86,87,],[-38,18,-2,-4,-5,-6,-7,-8,-9,-10,-3,-38,-26,-29,-32,-33,-34,-35,-12,56,-11,-15,-36,-27,-28,-30,-31,-38,-38,-37,-18,81,82,-17,-13,-16,-38,87,-14,]),'LPAREN':([12,14,16,20,21,22,23,25,27,44,45,46,47,48,51,52,53,54,55,58,65,80,],[20,23,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ASSIGN':([13,26,49,],[21,41,65,]),'LBRACKET':([13,33,41,],[22,48,58,]),'NUMBER':([20,21,22,23,25,27,44,45,46,47,48,51,52,53,54,55,58,65,80,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'STRING':([20,21,22,23,25,27,44,45,46,47,48,51,52,53,54,55,58,65,80,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'RPAREN':([28,29,30,31,32,33,34,37,40,42,59,60,61,62,63,67,68,69,70,71,75,],[43,-26,-29,-32,-33,-34,-35,50,57,59,-36,-27,-28,-30,-31,-21,-22,-23,-24,-25,-37,]),'PLUS':([28,29,30,31,32,33,34,35,36,38,42,59,60,61,62,63,64,67,68,69,70,71,74,75,76,],[44,-26,-29,-32,-33,-34,-35,44,44,44,44,-36,-27,-28,-30,-31,44,44,44,44,44,44,44,-37,44,]),'MINUS':([28,29,30,31,32,33,34,35,36,38,42,59,60,61,62,63,64,67,68,69,70,71,74,75,76,],[45,-26,-29,-32,-33,-34,-35,45,45,45,45,-36,-27,-28,-30,-31,45,45,45,45,45,45,45,-37,45,]),'RBRACKET':([29,30,31,32,33,34,36,59,60,61,62,63,64,73,74,75,83,],[-26,-29,-32,-33,-34,-35,49,-36,-27,-28,-30,-31,75,79,-19,-37,-20,]),'EQ':([29,30,31,32,33,34,38,59,60,61,62,63,75,],[-26,-29,-32,-33,-34,-35,51,-36,-27,-28,-30,-31,-37,]),'GT':([29,30,31,32,33,34,38,59,60,61,62,63,75,],[-26,-29,-32,-33,-34,-35,52,-36,-27,-28,-30,-31,-37,]),'LT':([29,30,31,32,33,34,38,59,60,61,62,63,75,],[-26,-29,-32,-33,-34,-35,53,-36,-27,-28,-30,-31,-37,]),'GE':([29,30,31,32,33,34,38,59,60,61,62,63,75,],[-26,-29,-32,-33,-34,-35,54,-36,-27,-28,-30,-31,-37,]),'LE':([29,30,31,32,33,34,38,59,60,61,62,63,75,],[-26,-29,-32,-33,-34,-35,55,-36,-27,-28,-30,-31,-37,]),'COMMA':([29,30,31,32,33,34,59,60,61,62,63,74,75,],[-26,-29,-32,-33,-34,-35,-36,-27,-28,-30,-31,80,-37,]),'TIMES':([29,30,31,32,33,34,59,60,61,62,63,75,],[46,-29,-32,-33,-34,-35,-36,46,46,-30,-31,-37,]),'DIVIDE':([29,30,31,32,33,34,59,60,61,62,63,75,],[47,-29,-32,-33,-34,-35,-36,47,47,-30,-31,-37,]),'ELSE':([81,],[84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([2,24,66,72,85,],[3,39,77,78,86,]),'statement':([2,3,24,39,66,72,77,78,85,86,],[4,19,4,19,4,4,19,19,4,19,]),'display_statement':([2,3,24,39,66,72,77,78,85,86,],[5,5,5,5,5,5,5,5,5,5,]),'assignment_statement':([2,3,24,39,66,72,77,78,85,86,],[6,6,6,6,6,6,6,6,6,6,]),'if_statement':([2,3,24,39,66,72,77,78,85,86,],[7,7,7,7,7,7,7,7,7,7,]),'loop_statement':([2,3,24,39,66,72,77,78,85,86,],[8,8,8,8,8,8,8,8,8,8,]),'while_statement':([2,3,24,39,66,72,77,78,85,86,],[9,9,9,9,9,9,9,9,9,9,]),'array_statement':([2,3,24,39,66,72,77,78,85,86,],[10,10,10,10,10,10,10,10,10,10,]),'empty':([2,3,24,39,66,72,77,78,85,86,],[11,11,11,11,11,11,11,11,11,11,]),'expression':([20,21,22,23,25,27,48,51,52,53,54,55,58,65,80,],[28,35,36,38,38,42,64,67,68,69,70,71,74,76,74,]),'term':([20,21,22,23,25,27,44,45,48,51,52,53,54,55,58,65,80,],[29,29,29,29,29,29,60,61,29,29,29,29,29,29,29,29,29,]),'factor':([20,21,22,23,25,27,44,45,46,47,48,51,52,53,54,55,58,65,80,],[30,30,30,30,30,30,30,30,62,63,30,30,30,30,30,30,30,30,30,]),'array_access':([20,21,22,23,25,27,44,45,46,47,48,51,52,53,54,55,58,65,80,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'condition':([23,25,],[37,40,]),'array_elements':([58,80,],[73,83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> BEGIN statements END','program',3,'p_program','ya_parser.py',9),
  ('statements -> statement','statements',1,'p_statements','ya_parser.py',14),
  ('statements -> statements statement','statements',2,'p_statements','ya_parser.py',15),
  ('statement -> display_statement','statement',1,'p_statement','ya_parser.py',23),
  ('statement -> assignment_statement','statement',1,'p_statement','ya_parser.py',24),
  ('statement -> if_statement','statement',1,'p_statement','ya_parser.py',25),
  ('statement -> loop_statement','statement',1,'p_statement','ya_parser.py',26),
  ('statement -> while_statement','statement',1,'p_statement','ya_parser.py',27),
  ('statement -> array_statement','statement',1,'p_statement','ya_parser.py',28),
  ('statement -> empty','statement',1,'p_statement','ya_parser.py',29),
  ('display_statement -> PRINT LPAREN expression RPAREN','display_statement',4,'p_display_statement','ya_parser.py',34),
  ('assignment_statement -> VARIABLE ASSIGN expression','assignment_statement',3,'p_assignment_statement','ya_parser.py',39),
  ('if_statement -> IF LPAREN condition RPAREN BEGIN statements END','if_statement',7,'p_if_statement','ya_parser.py',44),
  ('if_statement -> IF LPAREN condition RPAREN BEGIN statements END ELSE BEGIN statements END','if_statement',11,'p_if_statement','ya_parser.py',45),
  ('loop_statement -> LOOP BEGIN statements END','loop_statement',4,'p_loop_statement','ya_parser.py',53),
  ('while_statement -> WHILE LPAREN condition RPAREN BEGIN statements END','while_statement',7,'p_while_statement','ya_parser.py',58),
  ('array_statement -> ARRAY VARIABLE ASSIGN LBRACKET array_elements RBRACKET','array_statement',6,'p_array_statement','ya_parser.py',63),
  ('array_statement -> VARIABLE LBRACKET expression RBRACKET ASSIGN expression','array_statement',6,'p_array_assign','ya_parser.py',68),
  ('array_elements -> expression','array_elements',1,'p_array_elements','ya_parser.py',72),
  ('array_elements -> expression COMMA array_elements','array_elements',3,'p_array_elements','ya_parser.py',73),
  ('condition -> expression EQ expression','condition',3,'p_condition','ya_parser.py',81),
  ('condition -> expression GT expression','condition',3,'p_condition','ya_parser.py',82),
  ('condition -> expression LT expression','condition',3,'p_condition','ya_parser.py',83),
  ('condition -> expression GE expression','condition',3,'p_condition','ya_parser.py',84),
  ('condition -> expression LE expression','condition',3,'p_condition','ya_parser.py',85),
  ('expression -> term','expression',1,'p_expression','ya_parser.py',90),
  ('expression -> expression PLUS term','expression',3,'p_expression','ya_parser.py',91),
  ('expression -> expression MINUS term','expression',3,'p_expression','ya_parser.py',92),
  ('term -> factor','term',1,'p_term','ya_parser.py',100),
  ('term -> term TIMES factor','term',3,'p_term','ya_parser.py',101),
  ('term -> term DIVIDE factor','term',3,'p_term','ya_parser.py',102),
  ('factor -> NUMBER','factor',1,'p_factor','ya_parser.py',110),
  ('factor -> STRING','factor',1,'p_factor','ya_parser.py',111),
  ('factor -> VARIABLE','factor',1,'p_factor','ya_parser.py',112),
  ('factor -> array_access','factor',1,'p_factor','ya_parser.py',113),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','ya_parser.py',114),
  ('array_access -> VARIABLE LBRACKET expression RBRACKET','array_access',4,'p_array_access','ya_parser.py',122),
  ('empty -> <empty>','empty',0,'p_empty','ya_parser.py',126),
]
